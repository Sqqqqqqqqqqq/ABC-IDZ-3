rel@rel-VirtualBox:~$ objdump -d cosx_old

cosx_old:     формат файла elf64-x86-64


Дизассемблирование раздела .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Дизассемблирование раздела .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	push   0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmp *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop

Дизассемблирование раздела .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmp *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .plt.sec:

0000000000001070 <__stack_chk_fail@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmp *0x2f45(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <printf@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmp *0x2f3d(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__isoc99_scanf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmp *0x2f35(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	45 31 c0             	xor    %r8d,%r8d
    10b6:	31 c9                	xor    %ecx,%ecx
    10b8:	48 8d 3d f1 00 00 00 	lea    0xf1(%rip),%rdi        # 11b0 <main>
    10bf:	ff 15 13 2f 00 00    	call   *0x2f13(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10c5:	f4                   	hlt    
    10c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10cd:	00 00 00 

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    0x2f32(%rip),%rax        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 f6 2e 00 00 	mov    0x2ef6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmp    *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    0x2f09(%rip),%rdi        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    0x2f02(%rip),%rsi        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmp    *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d c5 2e 00 00 00 	cmpb   $0x0,0x2ec5(%rip)        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	call   1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	call   10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	movb   $0x1,0x2e9d(%rip)        # 4010 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	ret    
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmp    1100 <register_tm_clones>

0000000000001189 <add_one>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1195:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    119c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11a0:	8b 10                	mov    (%rax),%edx
    11a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11a5:	01 c2                	add    %eax,%edx
    11a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11ab:	89 10                	mov    %edx,(%rax)
    11ad:	90                   	nop
    11ae:	5d                   	pop    %rbp
    11af:	c3                   	ret    

00000000000011b0 <main>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	55                   	push   %rbp
    11b5:	48 89 e5             	mov    %rsp,%rbp
    11b8:	48 83 ec 30          	sub    $0x30,%rsp
    11bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11c3:	00 00 
    11c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11c9:	31 c0                	xor    %eax,%eax
    11cb:	f2 0f 10 05 55 0e 00 	movsd  0xe55(%rip),%xmm0        # 2028 <_IO_stdin_used+0x28>
    11d2:	00 
    11d3:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    11d8:	f2 0f 10 05 48 0e 00 	movsd  0xe48(%rip),%xmm0        # 2028 <_IO_stdin_used+0x28>
    11df:	00 
    11e0:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    11e5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    11e9:	48 89 c6             	mov    %rax,%rsi
    11ec:	48 8d 05 1d 0e 00 00 	lea    0xe1d(%rip),%rax        # 2010 <_IO_stdin_used+0x10>
    11f3:	48 89 c7             	mov    %rax,%rdi
    11f6:	b8 00 00 00 00       	mov    $0x0,%eax
    11fb:	e8 90 fe ff ff       	call   1090 <__isoc99_scanf@plt>
    1200:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1204:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1209:	48 8d 05 04 0e 00 00 	lea    0xe04(%rip),%rax        # 2014 <_IO_stdin_used+0x14>
    1210:	48 89 c7             	mov    %rax,%rdi
    1213:	b8 01 00 00 00       	mov    $0x1,%eax
    1218:	e8 63 fe ff ff       	call   1080 <printf@plt>
    121d:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    1222:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
    1227:	f2 0f 10 15 01 0e 00 	movsd  0xe01(%rip),%xmm2        # 2030 <_IO_stdin_used+0x30>
    122e:	00 
    122f:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
    1233:	f2 0f 10 15 fd 0d 00 	movsd  0xdfd(%rip),%xmm2        # 2038 <_IO_stdin_used+0x38>
    123a:	00 
    123b:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
    123f:	f2 0f 2c c1          	cvttsd2si %xmm1,%eax
    1243:	01 c0                	add    %eax,%eax
    1245:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1249:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
    124d:	f2 0f 10 0d e3 0d 00 	movsd  0xde3(%rip),%xmm1        # 2038 <_IO_stdin_used+0x38>
    1254:	00 
    1255:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    1259:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    125d:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    1262:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    1269:	eb 5f                	jmp    12ca <main+0x11a>
    126b:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    1270:	f3 0f 7e 0d c8 0d 00 	movq   0xdc8(%rip),%xmm1        # 2040 <_IO_stdin_used+0x40>
    1277:	00 
    1278:	66 0f 57 c8          	xorpd  %xmm0,%xmm1
    127c:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    1281:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    1285:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1288:	01 c0                	add    %eax,%eax
    128a:	8d 50 ff             	lea    -0x1(%rax),%edx
    128d:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1290:	0f af c2             	imul   %edx,%eax
    1293:	01 c0                	add    %eax,%eax
    1295:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1299:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
    129d:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    12a1:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
    12a6:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    12aa:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    12af:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    12b4:	f2 0f 58 45 e8       	addsd  -0x18(%rbp),%xmm0
    12b9:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    12be:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    12c2:	48 89 c7             	mov    %rax,%rdi
    12c5:	e8 bf fe ff ff       	call   1189 <add_one>
    12ca:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    12cf:	f2 0f 5e 45 f0       	divsd  -0x10(%rbp),%xmm0
    12d4:	f3 0f 7e 0d 74 0d 00 	movq   0xd74(%rip),%xmm1        # 2050 <_IO_stdin_used+0x50>
    12db:	00 
    12dc:	66 0f 54 c1          	andpd  %xmm1,%xmm0
    12e0:	66 0f 2f 05 78 0d 00 	comisd 0xd78(%rip),%xmm0        # 2060 <_IO_stdin_used+0x60>
    12e7:	00 
    12e8:	77 81                	ja     126b <main+0xbb>
    12ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    12ee:	66 48 0f 6e c0       	movq   %rax,%xmm0
    12f3:	48 8d 05 26 0d 00 00 	lea    0xd26(%rip),%rax        # 2020 <_IO_stdin_used+0x20>
    12fa:	48 89 c7             	mov    %rax,%rdi
    12fd:	b8 01 00 00 00       	mov    $0x1,%eax
    1302:	e8 79 fd ff ff       	call   1080 <printf@plt>
    1307:	b8 00 00 00 00       	mov    $0x0,%eax
    130c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1310:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1317:	00 00 
    1319:	74 05                	je     1320 <main+0x170>
    131b:	e8 50 fd ff ff       	call   1070 <__stack_chk_fail@plt>
    1320:	c9                   	leave  
    1321:	c3                   	ret    

Дизассемблирование раздела .fini:

0000000000001324 <_fini>:
    1324:	f3 0f 1e fa          	endbr64 
    1328:	48 83 ec 08          	sub    $0x8,%rsp
    132c:	48 83 c4 08          	add    $0x8,%rsp
    1330:	c3                   	ret    
