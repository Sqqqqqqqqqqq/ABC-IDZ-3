rel@rel-VirtualBox:~$ objdump -d cosx_ref

cosx_ref:     формат файла elf64-x86-64


Дизассемблирование раздела .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Дизассемблирование раздела .plt:

0000000000001020 <__stack_chk_fail@plt-0x10>:
    1020:	ff 35 8a 2f 00 00    	push   0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 8c 2f 00 00    	jmp    *0x2f8c(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <__stack_chk_fail@plt>:
    1030:	ff 25 8a 2f 00 00    	jmp    *0x2f8a(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <printf@plt>:
    1040:	ff 25 82 2f 00 00    	jmp    *0x2f82(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <__isoc99_scanf@plt>:
    1050:	ff 25 7a 2f 00 00    	jmp    *0x2f7a(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

Дизассемблирование раздела .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	ff 25 92 2f 00 00    	jmp    *0x2f92(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1066:	66 90                	xchg   %ax,%ax

Дизассемблирование раздела .text:

0000000000001070 <_start>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	31 ed                	xor    %ebp,%ebp
    1076:	49 89 d1             	mov    %rdx,%r9
    1079:	5e                   	pop    %rsi
    107a:	48 89 e2             	mov    %rsp,%rdx
    107d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1081:	50                   	push   %rax
    1082:	54                   	push   %rsp
    1083:	45 31 c0             	xor    %r8d,%r8d
    1086:	31 c9                	xor    %ecx,%ecx
    1088:	48 8d 3d fe 00 00 00 	lea    0xfe(%rip),%rdi        # 118d <main>
    108f:	ff 15 43 2f 00 00    	call   *0x2f43(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1095:	f4                   	hlt    
    1096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    109d:	00 00 00 

00000000000010a0 <deregister_tm_clones>:
    10a0:	48 8d 3d 69 2f 00 00 	lea    0x2f69(%rip),%rdi        # 4010 <__TMC_END__>
    10a7:	48 8d 05 62 2f 00 00 	lea    0x2f62(%rip),%rax        # 4010 <__TMC_END__>
    10ae:	48 39 f8             	cmp    %rdi,%rax
    10b1:	74 15                	je     10c8 <deregister_tm_clones+0x28>
    10b3:	48 8b 05 26 2f 00 00 	mov    0x2f26(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ba:	48 85 c0             	test   %rax,%rax
    10bd:	74 09                	je     10c8 <deregister_tm_clones+0x28>
    10bf:	ff e0                	jmp    *%rax
    10c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10c8:	c3                   	ret    
    10c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010d0 <register_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    0x2f39(%rip),%rdi        # 4010 <__TMC_END__>
    10d7:	48 8d 35 32 2f 00 00 	lea    0x2f32(%rip),%rsi        # 4010 <__TMC_END__>
    10de:	48 29 fe             	sub    %rdi,%rsi
    10e1:	48 89 f0             	mov    %rsi,%rax
    10e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10e8:	48 c1 f8 03          	sar    $0x3,%rax
    10ec:	48 01 c6             	add    %rax,%rsi
    10ef:	48 d1 fe             	sar    %rsi
    10f2:	74 14                	je     1108 <register_tm_clones+0x38>
    10f4:	48 8b 05 f5 2e 00 00 	mov    0x2ef5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    10fb:	48 85 c0             	test   %rax,%rax
    10fe:	74 08                	je     1108 <register_tm_clones+0x38>
    1100:	ff e0                	jmp    *%rax
    1102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1108:	c3                   	ret    
    1109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001110 <__do_global_dtors_aux>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	80 3d f5 2e 00 00 00 	cmpb   $0x0,0x2ef5(%rip)        # 4010 <__TMC_END__>
    111b:	75 2b                	jne    1148 <__do_global_dtors_aux+0x38>
    111d:	55                   	push   %rbp
    111e:	48 83 3d d2 2e 00 00 	cmpq   $0x0,0x2ed2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1125:	00 
    1126:	48 89 e5             	mov    %rsp,%rbp
    1129:	74 0c                	je     1137 <__do_global_dtors_aux+0x27>
    112b:	48 8b 3d d6 2e 00 00 	mov    0x2ed6(%rip),%rdi        # 4008 <__dso_handle>
    1132:	e8 29 ff ff ff       	call   1060 <__cxa_finalize@plt>
    1137:	e8 64 ff ff ff       	call   10a0 <deregister_tm_clones>
    113c:	c6 05 cd 2e 00 00 01 	movb   $0x1,0x2ecd(%rip)        # 4010 <__TMC_END__>
    1143:	5d                   	pop    %rbp
    1144:	c3                   	ret    
    1145:	0f 1f 00             	nopl   (%rax)
    1148:	c3                   	ret    
    1149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001150 <frame_dummy>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	e9 77 ff ff ff       	jmp    10d0 <register_tm_clones>

0000000000001159 <add_one>:
    1159:	55                   	push   %rbp
    115a:	48 89 e5             	mov    %rsp,%rbp
    115d:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    1164:	48 89 f8             	mov    %rdi,%rax
    1167:	8b 10                	mov    (%rax),%edx
    1169:	b8 01 00 00 00       	mov    $0x1,%eax
    116e:	01 c2                	add    %eax,%edx
    1170:	48 89 f8             	mov    %rdi,%rax
    1173:	89 10                	mov    %edx,(%rax)
    1175:	90                   	nop
    1176:	5d                   	pop    %rbp
    1177:	c3                   	ret    
    1178:	25 6c 66 00 63       	and    $0x6300666c,%eax
    117d:	6f                   	outsl  %ds:(%rsi),(%dx)
    117e:	73 28                	jae    11a8 <main+0x1b>
    1180:	25 6c 66 29 20       	and    $0x2029666c,%eax
    1185:	3d 20 00 25 6c       	cmp    $0x6c250020,%eax
    118a:	66 0a 00             	data16 or (%rax),%al

000000000000118d <main>:
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 83 ec 30          	sub    $0x30,%rsp
    1195:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    119c:	00 00 
    119e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11a2:	31 c0                	xor    %eax,%eax
    11a4:	f2 0f 10 05 64 0e 00 	movsd  0xe64(%rip),%xmm0        # 2010 <_IO_stdin_used+0x10>
    11ab:	00 
    11ac:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    11b1:	f2 0f 10 05 57 0e 00 	movsd  0xe57(%rip),%xmm0        # 2010 <_IO_stdin_used+0x10>
    11b8:	00 
    11b9:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    11be:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
    11c2:	48 8d 3d af ff ff ff 	lea    -0x51(%rip),%rdi        # 1178 <add_one+0x1f>
    11c9:	31 c0                	xor    %eax,%eax
    11cb:	e8 80 fe ff ff       	call   1050 <__isoc99_scanf@plt>
    11d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    11d4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    11d9:	48 8d 3d 9c ff ff ff 	lea    -0x64(%rip),%rdi        # 117c <add_one+0x23>
    11e0:	b8 01 00 00 00       	mov    $0x1,%eax
    11e5:	e8 56 fe ff ff       	call   1040 <printf@plt>
    11ea:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    11ef:	f2 0f 10 4d e0       	movsd  -0x20(%rbp),%xmm1
    11f4:	f2 0f 10 15 1c 0e 00 	movsd  0xe1c(%rip),%xmm2        # 2018 <_IO_stdin_used+0x18>
    11fb:	00 
    11fc:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
    1200:	f2 0f 10 15 18 0e 00 	movsd  0xe18(%rip),%xmm2        # 2020 <_IO_stdin_used+0x20>
    1207:	00 
    1208:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
    120c:	f2 0f 2c c1          	cvttsd2si %xmm1,%eax
    1210:	01 c0                	add    %eax,%eax
    1212:	66 0f ef d2          	pxor   %xmm2,%xmm2
    1216:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
    121a:	f2 0f 10 0d fe 0d 00 	movsd  0xdfe(%rip),%xmm1        # 2020 <_IO_stdin_used+0x20>
    1221:	00 
    1222:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
    1226:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    122a:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    122f:	bb 01 00 00 00       	mov    $0x1,%ebx
    1234:	89 5d dc             	mov    %ebx,-0x24(%rbp)
    1237:	eb 5d                	jmp    1296 <main+0x109>
    1239:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    123e:	f3 0f 7e 0d ea 0d 00 	movq   0xdea(%rip),%xmm1        # 2030 <_IO_stdin_used+0x30>
    1245:	00 
    1246:	66 0f 57 c8          	xorpd  %xmm0,%xmm1
    124a:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    124f:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    1253:	89 d8                	mov    %ebx,%eax
    1255:	01 c0                	add    %eax,%eax
    1257:	8d 50 ff             	lea    -0x1(%rax),%edx
    125a:	89 d8                	mov    %ebx,%eax
    125c:	0f af c2             	imul   %edx,%eax
    125f:	01 c0                	add    %eax,%eax
    1261:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1265:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
    1269:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    126d:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
    1272:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    1276:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    127b:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    1280:	f2 0f 58 45 e8       	addsd  -0x18(%rbp),%xmm0
    1285:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    128a:	48 8d 7d dc          	lea    -0x24(%rbp),%rdi
    128e:	e8 c6 fe ff ff       	call   1159 <add_one>
    1293:	8b 5d dc             	mov    -0x24(%rbp),%ebx
    1296:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    129b:	f2 0f 5e 45 f0       	divsd  -0x10(%rbp),%xmm0
    12a0:	f3 0f 7e 0d 98 0d 00 	movq   0xd98(%rip),%xmm1        # 2040 <_IO_stdin_used+0x40>
    12a7:	00 
    12a8:	66 0f 54 c1          	andpd  %xmm1,%xmm0
    12ac:	66 0f 2f 05 9c 0d 00 	comisd 0xd9c(%rip),%xmm0        # 2050 <_IO_stdin_used+0x50>
    12b3:	00 
    12b4:	77 83                	ja     1239 <main+0xac>
    12b6:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    12bb:	48 8d 3d c6 fe ff ff 	lea    -0x13a(%rip),%rdi        # 1188 <add_one+0x2f>
    12c2:	b8 01 00 00 00       	mov    $0x1,%eax
    12c7:	e8 74 fd ff ff       	call   1040 <printf@plt>
    12cc:	b8 00 00 00 00       	mov    $0x0,%eax
    12d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    12d5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    12dc:	00 00 
    12de:	74 05                	je     12e5 <main+0x158>
    12e0:	e8 4b fd ff ff       	call   1030 <__stack_chk_fail@plt>
    12e5:	c9                   	leave  
    12e6:	c3                   	ret    

Дизассемблирование раздела .fini:

00000000000012e8 <_fini>:
    12e8:	f3 0f 1e fa          	endbr64 
    12ec:	48 83 ec 08          	sub    $0x8,%rsp
    12f0:	48 83 c4 08          	add    $0x8,%rsp
    12f4:	c3                   	ret 
